name: publish-windows

on:
  push:
    branches:
      - Al-dev-windows
  pull_request:
    branches:
      - Al-dev-windows
  workflow_dispatch:

jobs:
  test:
    name: Run tests and coverage upload
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    env:
        SDICOS_PATH: 'C:/Program Files (x86)/Stratovan Corporation/SDICOS-VS2022'
    strategy:
      fail-fast: true
      matrix:
        arch:
          - amd64

    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: ${{ matrix.arch }}

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Download DICOS Installer
        env:
          AWS_DEFAULT_REGION: 'eu-west-3'
          AWS_ACCESS_KEY_ID: ${{ secrets.DICOS_S3_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DICOS_S3_SECRET }}
        run: |
          aws s3 cp s3://dicos-installer/sdicos_win_vs2022_r20230925.exe installer.exe

      - name: Install DICOS
        run: |
          .\installer.exe --unattendedmodeui none --mode unattended --prefix "${{env.SDICOS_PATH}}"

      - name: Cache DICOS Install
        uses: actions/cache@v3
        with:
          path: C:/Program Files (x86)/Stratovan Corporation/SDICOS-VS2022
          key: dicos-install-${{ runner.os }}

      - name: Build
        run: |
          pip install -r requirements.txt
          setx SDICOS_PATH "${{env.SDICOS_PATH}}" /M
          python -m build --wheel

      - name: Run tests
        run: |
          for %%f in (dist\pydicos-*.whl) do pip install "%%f"
          pip install pytest pytest-cov pytest-xprocess pytest-order
          pytest --cov-report=xml --cov=pydicos tests/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.0.7
        with:
          files: ./coverage.xml
          env_vars: inputs.os
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
  build:
    name: Build distribution üì¶
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    needs:
      - test
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1.13.0

      - name: Restore Cached DICOS Install
        uses: actions/cache@v3
        with:
          path: C:/Program Files (x86)/Stratovan Corporation/SDICOS-VS2022
          key: dicos-install-${{ runner.os }}
          
      - name: Set Environment Variables
        run: echo "SDICOS_PATH=C:/Program Files (x86)/Stratovan Corporation/SDICOS-VS2022" >> $GITHUB_ENV

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Build Wheels with cibuildwheel
        run: |
          cibuildwheel --output-dir wheelhouse

      - name: Store Built Wheels
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: wheelhouse/*.whl
  
  publish-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    if : ${{ github.event_name == 'push' || github.ref != 'refs/heads/main' }}
    needs:
    - build
    runs-on: windows-latest
    permissions:
      id-token: write
    environment:
      name: test
      url: https://test.pypi.org/p/pyDICOS

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist
        merge-multiple: true

    - name : publish to testpypi
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if : ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs:
      - build
    runs-on: windows-latest
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/pydicos

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist
          merge-multiple: true

      - name: publish to pypi
        uses: pypa/gh-action-pypi-publish@release/v1