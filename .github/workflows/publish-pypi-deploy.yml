name: publish-pypi

on:
  push:
    branches:
      - main
      - workflow
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        bits : [ '64' ]
        python_version : [ '7', '8', '9', '10', '11' ]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python 3.${{ matrix.python_version }}
      uses: actions/setup-python@v5
      with:
        python-version: "3.${{ matrix.python_version }}"

    - name: Download DICOS installer
      env:
        AWS_DEFAULT_REGION: 'eu-west-3'
        AWS_ACCESS_KEY_ID: ${{ secrets.GH_S3_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.GH_S3_AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 cp s3://dicos-installer/sdicos_lin_ubuntu-20-${{ matrix.bits }}b_r20230925_${{ matrix.bits }}b.run installer.run
        chmod +x installer.run
        ./installer.run --unattendedmodeui none --mode unattended --prefix /opt/stratovan/sdicos
        chmod 755 -R /opt/stratovan/sdicos

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.2
      env:
        CIBW_BUILD: cp3${{ matrix.python_version }}-manylinux_x86_64
      with:
        config-file: pyproject.toml

    - name: Test with pytest
      run: |
        pip install pytest
        pytest tests/

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      env:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: Auxilia-tech/pyDICOS

    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: wheelhouse/*.whl

  publish-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    if : ${{ false && github.event_name == 'pull_request' }}
    needs:
    - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: test
      url: https://test.pypi.org/p/pyDICOS

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist
        merge-multiple: true

    - name : publish to testpypi
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if : ${{ false && github.event_name == 'push' }}
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/pydicos

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist
          merge-multiple: true

      - name: publish to testpypi
        uses: pypa/gh-action-pypi-publish@release/v1
