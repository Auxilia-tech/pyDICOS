name: publish-pypi

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: [ '3.10' ]
        bits : [ '64' ]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download DICOS installer
      env:
        AWS_DEFAULT_REGION: 'eu-west-3'
        AWS_ACCESS_KEY_ID: ${{ secrets.GH_S3_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.GH_S3_AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 cp s3://dicos-installer/sdicos_lin_ubuntu-20-${{ matrix.bits }}b_r20230925_${{ matrix.bits }}b.run installer.run

    - name: Install DICOS
      run: |
        chmod +x installer.run
        ./installer.run --unattendedmodeui none --mode unattended --prefix /opt/stratovan/sdicos
        rm installer.run

    - name: Build package
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python setup.py sdist bdist_wheel

    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  publish-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    permissions:
      id-token: write

    environment:
      name: test
      url: https://test.pypi.org/p/pyDICOS

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name : publish to testpypi
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/